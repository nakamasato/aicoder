// Code generated by ent, DO NOT EDIT.

package document

import (
	"entgo.io/ent/dialect/sql"
	"github.com/nakamasato/aicoder/ent/predicate"
	pgvector "github.com/pgvector/pgvector-go"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.Document {
	return predicate.Document(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.Document {
	return predicate.Document(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.Document {
	return predicate.Document(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.Document {
	return predicate.Document(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.Document {
	return predicate.Document(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.Document {
	return predicate.Document(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.Document {
	return predicate.Document(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.Document {
	return predicate.Document(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.Document {
	return predicate.Document(sql.FieldLTE(FieldID, id))
}

// Content applies equality check predicate on the "content" field. It's identical to ContentEQ.
func Content(v string) predicate.Document {
	return predicate.Document(sql.FieldEQ(FieldContent, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Document {
	return predicate.Document(sql.FieldEQ(FieldDescription, v))
}

// Embedding applies equality check predicate on the "embedding" field. It's identical to EmbeddingEQ.
func Embedding(v pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldEQ(FieldEmbedding, v))
}

// ContentEQ applies the EQ predicate on the "content" field.
func ContentEQ(v string) predicate.Document {
	return predicate.Document(sql.FieldEQ(FieldContent, v))
}

// ContentNEQ applies the NEQ predicate on the "content" field.
func ContentNEQ(v string) predicate.Document {
	return predicate.Document(sql.FieldNEQ(FieldContent, v))
}

// ContentIn applies the In predicate on the "content" field.
func ContentIn(vs ...string) predicate.Document {
	return predicate.Document(sql.FieldIn(FieldContent, vs...))
}

// ContentNotIn applies the NotIn predicate on the "content" field.
func ContentNotIn(vs ...string) predicate.Document {
	return predicate.Document(sql.FieldNotIn(FieldContent, vs...))
}

// ContentGT applies the GT predicate on the "content" field.
func ContentGT(v string) predicate.Document {
	return predicate.Document(sql.FieldGT(FieldContent, v))
}

// ContentGTE applies the GTE predicate on the "content" field.
func ContentGTE(v string) predicate.Document {
	return predicate.Document(sql.FieldGTE(FieldContent, v))
}

// ContentLT applies the LT predicate on the "content" field.
func ContentLT(v string) predicate.Document {
	return predicate.Document(sql.FieldLT(FieldContent, v))
}

// ContentLTE applies the LTE predicate on the "content" field.
func ContentLTE(v string) predicate.Document {
	return predicate.Document(sql.FieldLTE(FieldContent, v))
}

// ContentContains applies the Contains predicate on the "content" field.
func ContentContains(v string) predicate.Document {
	return predicate.Document(sql.FieldContains(FieldContent, v))
}

// ContentHasPrefix applies the HasPrefix predicate on the "content" field.
func ContentHasPrefix(v string) predicate.Document {
	return predicate.Document(sql.FieldHasPrefix(FieldContent, v))
}

// ContentHasSuffix applies the HasSuffix predicate on the "content" field.
func ContentHasSuffix(v string) predicate.Document {
	return predicate.Document(sql.FieldHasSuffix(FieldContent, v))
}

// ContentEqualFold applies the EqualFold predicate on the "content" field.
func ContentEqualFold(v string) predicate.Document {
	return predicate.Document(sql.FieldEqualFold(FieldContent, v))
}

// ContentContainsFold applies the ContainsFold predicate on the "content" field.
func ContentContainsFold(v string) predicate.Document {
	return predicate.Document(sql.FieldContainsFold(FieldContent, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Document {
	return predicate.Document(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Document {
	return predicate.Document(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Document {
	return predicate.Document(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Document {
	return predicate.Document(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Document {
	return predicate.Document(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Document {
	return predicate.Document(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Document {
	return predicate.Document(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Document {
	return predicate.Document(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Document {
	return predicate.Document(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Document {
	return predicate.Document(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Document {
	return predicate.Document(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Document {
	return predicate.Document(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Document {
	return predicate.Document(sql.FieldContainsFold(FieldDescription, v))
}

// EmbeddingEQ applies the EQ predicate on the "embedding" field.
func EmbeddingEQ(v pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldEQ(FieldEmbedding, v))
}

// EmbeddingNEQ applies the NEQ predicate on the "embedding" field.
func EmbeddingNEQ(v pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldNEQ(FieldEmbedding, v))
}

// EmbeddingIn applies the In predicate on the "embedding" field.
func EmbeddingIn(vs ...pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldIn(FieldEmbedding, vs...))
}

// EmbeddingNotIn applies the NotIn predicate on the "embedding" field.
func EmbeddingNotIn(vs ...pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldNotIn(FieldEmbedding, vs...))
}

// EmbeddingGT applies the GT predicate on the "embedding" field.
func EmbeddingGT(v pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldGT(FieldEmbedding, v))
}

// EmbeddingGTE applies the GTE predicate on the "embedding" field.
func EmbeddingGTE(v pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldGTE(FieldEmbedding, v))
}

// EmbeddingLT applies the LT predicate on the "embedding" field.
func EmbeddingLT(v pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldLT(FieldEmbedding, v))
}

// EmbeddingLTE applies the LTE predicate on the "embedding" field.
func EmbeddingLTE(v pgvector.Vector) predicate.Document {
	return predicate.Document(sql.FieldLTE(FieldEmbedding, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Document) predicate.Document {
	return predicate.Document(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Document) predicate.Document {
	return predicate.Document(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Document) predicate.Document {
	return predicate.Document(sql.NotPredicates(p))
}
